# This is a reusable workflow used by master and release CI
on:
  workflow_call:
    inputs:
      arch:
        description: x86_64 or aarch64
        required: true
        type: string
      version:
        description: The Falco version to use when building images (must be of the format "1.2.3")
        required: true
        type: string
      tag:
        description: The Git ref to use
        required: true
        type: string

# Here we just build all docker images as tarballs,
# then we upload all the tarballs to be later downloaded by reusable_publish_docker workflow.
# In this way, we don't need to publish any arch specific image,
# and this "build" workflow is actually only building images.

permissions:
  contents: read

jobs:
  build-docker:
    # See https://github.com/actions/runner/issues/409#issuecomment-1158849936
    runs-on: ${{ (inputs.arch == 'aarch64' && 'ubuntu-22.04-arm') || 'ubuntu-latest' }}
    steps:
      - name: Checkout
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
        with:
          persist-credentials: false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Build Falco image
        env:
          ARCH: ${{ inputs.arch }}
          TAG: ${{ inputs.tag }}
          FALCO_VERSION: ${{ inputs.version }}
        run: |
          docker build -f docker/falco/Dockerfile -t ghcr.io/grafana/falco:"${ARCH}-${TAG}" \
            --build-arg FALCO_VERSION="${FALCO_VERSION}" \
            .
          docker save ghcr.io/grafana/falco:"${ARCH}-${TAG}" --output /tmp/falco-"${ARCH}".tar

      # falco-driver-loader builds on top of the Falco image.
      - name: Build falco-driver-loader image
        env:
          ARCH: ${{ inputs.arch }}
          TAG: ${{ inputs.tag }}
        run: |
          docker build -f docker/driver-loader/Dockerfile -t ghcr.io/grafana/falco-driver-loader:"${ARCH}-${TAG}" \
            --build-arg FALCO_IMAGE_TAG="${ARCH}-${TAG}" \
            .
            docker save ghcr.io/grafana/falco-driver-loader:"${ARCH}-${TAG}" --output /tmp/falco-driver-loader-"${ARCH}".tar

      - name: Upload images tarballs
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: falco-images-${{ inputs.arch }}
          path: /tmp/falco-*.tar
          retention-days: 1
